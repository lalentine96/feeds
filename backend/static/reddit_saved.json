{
  "kind": "Listing",
  "data": {
    "modhash": null,
    "dist": 25,
    "children": [
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "Here it is: [https://transform.tools/json-to-rust-serde](https://transform.tools/json-to-rust-serde) . This could have saved me a lot of time, had I known about this before.",
          "author_fullname": "t2_9yr8k",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "TIL: There is a JSON to Rust Struct + Serde converter tool",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_eaomuu",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 96,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 96,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1576383072.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.rust",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Here it is: &lt;a href=\"https://transform.tools/json-to-rust-serde\"&gt;https://transform.tools/json-to-rust-serde&lt;/a&gt; . This could have saved me a lot of time, had I known about this before.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "eaomuu",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "TiberiusFerreira",
          "discussion_type": null,
          "num_comments": 8,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/rust/comments/eaomuu/til_there_is_a_json_to_rust_struct_serde/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/rust/comments/eaomuu/til_there_is_a_json_to_rust_struct_serde/",
          "subreddit_subscribers": 83126,
          "created_utc": 1576354272.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "philosophy",
          "selftext": "",
          "author_fullname": "t2_4z9onz7n",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Tomorrow will have suffering in it - Stoic Philosophy.",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/philosophy",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "video",
          "downs": 0,
          "thumbnail_height": 105,
          "hide_score": false,
          "name": "t3_ea4oey",
          "quarantine": false,
          "link_flair_text_color": "light",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 2118,
          "total_awards_received": 1,
          "media_embed": {
            "content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/AciDnRnVDn0?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;",
            "width": 600,
            "scrolling": false,
            "height": 338
          },
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": {
            "type": "youtube.com",
            "oembed": {
              "provider_url": "https://www.youtube.com/",
              "version": "1.0",
              "title": "Tomorrow Will have Suffering In it - Stoic Philosophy",
              "type": "video",
              "thumbnail_width": 480,
              "height": 338,
              "width": 600,
              "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/AciDnRnVDn0?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;",
              "author_name": "Animated Meditation",
              "provider_name": "YouTube",
              "thumbnail_url": "https://i.ytimg.com/vi/AciDnRnVDn0/hqdefault.jpg",
              "thumbnail_height": 360,
              "author_url": "https://www.youtube.com/channel/UCkQ--_Mv9X9T0jgE08uvwDA"
            }
          },
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {
            "content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/AciDnRnVDn0?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;",
            "width": 600,
            "scrolling": false,
            "media_domain_url": "https://www.redditmedia.com/mediaembed/ea4oey",
            "height": 338
          },
          "link_flair_text": "Video",
          "can_mod_post": false,
          "score": 2118,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "image",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {
            "gid_1": 1
          },
          "post_hint": "rich:video",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1576276235.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "youtu.be",
          "allow_live_comments": true,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/1EUYo6CJA7xVEGALcSyCLbkAzwczkT__epfCDNMDIN0.jpg?auto=webp&amp;s=2d789f3a54a53ea0ea8c544ac1842f76773f9198",
                  "width": 480,
                  "height": 360
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/1EUYo6CJA7xVEGALcSyCLbkAzwczkT__epfCDNMDIN0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=9157eb7104f0e29049698f0273b40565f0ec7f5d",
                    "width": 108,
                    "height": 81
                  },
                  {
                    "url": "https://external-preview.redd.it/1EUYo6CJA7xVEGALcSyCLbkAzwczkT__epfCDNMDIN0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e6f14fe369cf8a5adb72b115c7ec9da18743d5b6",
                    "width": 216,
                    "height": 162
                  },
                  {
                    "url": "https://external-preview.redd.it/1EUYo6CJA7xVEGALcSyCLbkAzwczkT__epfCDNMDIN0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=083162b4a3a1a3dd29d29802b9ee01acdbe20e47",
                    "width": 320,
                    "height": 240
                  }
                ],
                "variants": {},
                "id": "sU7b9EQe0l5eGAaqpyJtMMDInJmnpF_KpdrFco-LIW4"
              }
            ],
            "enabled": false
          },
          "all_awardings": [
            {
              "count": 1,
              "is_enabled": true,
              "subreddit_id": null,
              "description": "Shows the Silver Award... and that's it.",
              "end_date": null,
              "award_sub_type": "GLOBAL",
              "coin_reward": 0,
              "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png",
              "days_of_premium": 0,
              "is_new": false,
              "id": "gid_1",
              "icon_height": 512,
              "resized_icons": [
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png",
                  "width": 128,
                  "height": 128
                }
              ],
              "days_of_drip_extension": 0,
              "award_type": "global",
              "start_date": null,
              "coin_price": 100,
              "icon_width": 512,
              "subreddit_coin_reward": 0,
              "name": "Silver"
            }
          ],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "4eba1c80-c90a-11e4-bc65-22000a638288",
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh5b",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#ff4500",
          "id": "ea4oey",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Henokaa",
          "discussion_type": null,
          "num_comments": 180,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/philosophy/comments/ea4oey/tomorrow_will_have_suffering_in_it_stoic/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://youtu.be/AciDnRnVDn0",
          "subreddit_subscribers": 14309013,
          "created_utc": 1576247435.0,
          "num_crossposts": 1,
          "media": {
            "type": "youtube.com",
            "oembed": {
              "provider_url": "https://www.youtube.com/",
              "version": "1.0",
              "title": "Tomorrow Will have Suffering In it - Stoic Philosophy",
              "type": "video",
              "thumbnail_width": 480,
              "height": 338,
              "width": 600,
              "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/AciDnRnVDn0?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;",
              "author_name": "Animated Meditation",
              "provider_name": "YouTube",
              "thumbnail_url": "https://i.ytimg.com/vi/AciDnRnVDn0/hqdefault.jpg",
              "thumbnail_height": 360,
              "author_url": "https://www.youtube.com/channel/UCkQ--_Mv9X9T0jgE08uvwDA"
            }
          },
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "",
          "author_fullname": "t2_5h278",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 2,
          "clicked": false,
          "title": "How to speed up the Rust compiler one last time in 2019",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_e8yky2",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 431,
          "total_awards_received": 2,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 431,
          "approved_by": null,
          "author_premium": true,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {
            "gid_2": 2
          },
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1576048923.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "blog.mozilla.org",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [
            {
              "count": 2,
              "is_enabled": true,
              "subreddit_id": null,
              "description": "Gives the author a week of Reddit Premium, %{coin_symbol}100 Coins to do with as they please, and shows a Gold Award.",
              "end_date": null,
              "award_sub_type": "GLOBAL",
              "coin_reward": 100,
              "icon_url": "https://www.redditstatic.com/gold/awards/icon/gold_512.png",
              "days_of_premium": 7,
              "is_new": false,
              "id": "gid_2",
              "icon_height": 512,
              "resized_icons": [
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_16.png",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_32.png",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_48.png",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_64.png",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_128.png",
                  "width": 128,
                  "height": 128
                }
              ],
              "days_of_drip_extension": 0,
              "award_type": "global",
              "start_date": null,
              "coin_price": 500,
              "icon_width": 512,
              "subreddit_coin_reward": 0,
              "name": "Gold"
            }
          ],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "e8yky2",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "nnethercote",
          "discussion_type": null,
          "num_comments": 63,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/rust/comments/e8yky2/how_to_speed_up_the_rust_compiler_one_last_time/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://blog.mozilla.org/nnethercote/2019/12/11/how-to-speed-up-the-rust-compiler-one-last-time-in-2019/",
          "subreddit_subscribers": 83126,
          "created_utc": 1576020123.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "Floats and doubles only implement `PartialEq`, but not `Eq`.  I don't really understand why this is the case, other than relating to how floating points work in hardware.  But it does cause a of of problems when trying to use floats in various data structures that only accept types which implement `Eq`, such as a HashMap.  \n\nI was recently trying to build a [bitmap index](http://en.wikipedia.org/wiki/Bitmap_index) (e.g. a column of bits for each unique value in the dataset) and ran into this problem for like the fifth time.\n\nThe natural data-structure is HashMap.  The map key is the field's distinct value, and the map value is a bit vector representing which documents contain that distinct value.  It's easy to append new documents, since you just lookup the value in the map and modify the bit vector.\n\nBut this won't work for floats, since float doesn't implement `Eq`.  This is just one example where I've run into this problem.  Is there a general pattern people use to work around this limitation?  I've only worked in higher languages where this problem with floats is hidden from the programmer.\n\nEdit: Some solutions I considered, all which seem hacky:\n\n- Use a vector, but that requires either a linear scan to find values, or a sort + binary search\n- Transmute the float into a long so that it can be stored in a HashMap, then keep track of which values were originally floats (eww)\n- Wrap all the floats in another struct that implements Eq somehow?",
          "author_fullname": "t2_6f29a",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Dealing with floats and lack of Eq",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_2h86qk",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 6,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 6,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": 1411479454.0,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1411508045.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.rust",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Floats and doubles only implement &lt;code&gt;PartialEq&lt;/code&gt;, but not &lt;code&gt;Eq&lt;/code&gt;.  I don&amp;#39;t really understand why this is the case, other than relating to how floating points work in hardware.  But it does cause a of of problems when trying to use floats in various data structures that only accept types which implement &lt;code&gt;Eq&lt;/code&gt;, such as a HashMap.  &lt;/p&gt;\n\n&lt;p&gt;I was recently trying to build a &lt;a href=\"http://en.wikipedia.org/wiki/Bitmap_index\"&gt;bitmap index&lt;/a&gt; (e.g. a column of bits for each unique value in the dataset) and ran into this problem for like the fifth time.&lt;/p&gt;\n\n&lt;p&gt;The natural data-structure is HashMap.  The map key is the field&amp;#39;s distinct value, and the map value is a bit vector representing which documents contain that distinct value.  It&amp;#39;s easy to append new documents, since you just lookup the value in the map and modify the bit vector.&lt;/p&gt;\n\n&lt;p&gt;But this won&amp;#39;t work for floats, since float doesn&amp;#39;t implement &lt;code&gt;Eq&lt;/code&gt;.  This is just one example where I&amp;#39;ve run into this problem.  Is there a general pattern people use to work around this limitation?  I&amp;#39;ve only worked in higher languages where this problem with floats is hidden from the programmer.&lt;/p&gt;\n\n&lt;p&gt;Edit: Some solutions I considered, all which seem hacky:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Use a vector, but that requires either a linear scan to find values, or a sort + binary search&lt;/li&gt;\n&lt;li&gt;Transmute the float into a long so that it can be stored in a HashMap, then keep track of which values were originally floats (eww)&lt;/li&gt;\n&lt;li&gt;Wrap all the floats in another struct that implements Eq somehow?&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": true,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "2h86qk",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "polyfractal",
          "discussion_type": null,
          "num_comments": 38,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/rust/comments/2h86qk/dealing_with_floats_and_lack_of_eq/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/rust/comments/2h86qk/dealing_with_floats_and_lack_of_eq/",
          "subreddit_subscribers": 83126,
          "created_utc": 1411479245.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "docker",
          "selftext": "So we just started working in our team with Docker, and some people in our group has Macs, others have Linux. Our app runs *much* faster on Linux than it does on Mac. I've read a bit about this and it's because there's an extra layer of virtualization that slows things down on Mac. Apparently I can't seem to find a solution. Is it really a problem of abstraction that cannot be fixed, or is it mainly a Docker bug and we're all waiting for a fix on their end?",
          "author_fullname": "t2_2x4k1",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Why is Docker so slow on Mac?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/docker",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_59u1b8",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 24,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 24,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1477685187.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.docker",
          "allow_live_comments": true,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So we just started working in our team with Docker, and some people in our group has Macs, others have Linux. Our app runs &lt;em&gt;much&lt;/em&gt; faster on Linux than it does on Mac. I&amp;#39;ve read a bit about this and it&amp;#39;s because there&amp;#39;s an extra layer of virtualization that slows things down on Mac. Apparently I can&amp;#39;t seem to find a solution. Is it really a problem of abstraction that cannot be fixed, or is it mainly a Docker bug and we&amp;#39;re all waiting for a fix on their end?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": true,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2y00f",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "59u1b8",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "sktrdie",
          "discussion_type": null,
          "num_comments": 40,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/docker/comments/59u1b8/why_is_docker_so_slow_on_mac/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/docker/comments/59u1b8/why_is_docker_so_slow_on_mac/",
          "subreddit_subscribers": 76762,
          "created_utc": 1477656387.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "Which is better? Does it depend on the situation? I'm curious.",
          "author_fullname": "t2_3nw7lyfm",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Box&lt;Option&lt;_&gt;&gt; or Option&lt;Box&lt;_&gt;&gt;",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_e84uiv",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 46,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 46,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1575893868.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.rust",
          "allow_live_comments": true,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Which is better? Does it depend on the situation? I&amp;#39;m curious.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "e84uiv",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "quebin31",
          "discussion_type": null,
          "num_comments": 16,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/rust/comments/e84uiv/boxoption_or_optionbox/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/rust/comments/e84uiv/boxoption_or_optionbox/",
          "subreddit_subscribers": 83126,
          "created_utc": 1575865068.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "",
          "author_fullname": "t2_55xtmmei",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Writing the slowest quicksort",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": 78,
          "hide_score": false,
          "name": "t3_e6pchu",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 203,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 203,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "link",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1575615815.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "chasewilson.dev",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/B6rCDfxya_fHY4yBxaQXF0AyD45esWQFx9aAV2UZwyw.jpg?auto=webp&amp;s=de2952851977da48bcf4301c1b545bfb7d0b4783",
                  "width": 1920,
                  "height": 1080
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/B6rCDfxya_fHY4yBxaQXF0AyD45esWQFx9aAV2UZwyw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=277d450ae6b3e60ee4b3c828cd257e408f1d2cb0",
                    "width": 108,
                    "height": 60
                  },
                  {
                    "url": "https://external-preview.redd.it/B6rCDfxya_fHY4yBxaQXF0AyD45esWQFx9aAV2UZwyw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=083c54b415f3d3e64e47665ccf0a7245c8b421e6",
                    "width": 216,
                    "height": 121
                  },
                  {
                    "url": "https://external-preview.redd.it/B6rCDfxya_fHY4yBxaQXF0AyD45esWQFx9aAV2UZwyw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=312c777fb125a796e81a24184013433fc5853e16",
                    "width": 320,
                    "height": 180
                  },
                  {
                    "url": "https://external-preview.redd.it/B6rCDfxya_fHY4yBxaQXF0AyD45esWQFx9aAV2UZwyw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8fc634ce6a0c4110b6d92081cbc8304365c76549",
                    "width": 640,
                    "height": 360
                  },
                  {
                    "url": "https://external-preview.redd.it/B6rCDfxya_fHY4yBxaQXF0AyD45esWQFx9aAV2UZwyw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5b935a3df189158866e0bad379b1050ee45e1e14",
                    "width": 960,
                    "height": 540
                  },
                  {
                    "url": "https://external-preview.redd.it/B6rCDfxya_fHY4yBxaQXF0AyD45esWQFx9aAV2UZwyw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=15fa88279a05655577a0f2fbe39ceef741612121",
                    "width": 1080,
                    "height": 607
                  }
                ],
                "variants": {},
                "id": "i5wSi4ILsPfayz_yhOSrKDOnXWBCG6HmDRxWLuLRaE4"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "e6pchu",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "K1xiron",
          "discussion_type": null,
          "num_comments": 48,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/rust/comments/e6pchu/writing_the_slowest_quicksort/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://chasewilson.dev/blog/slowest-quicksort/",
          "subreddit_subscribers": 83126,
          "created_utc": 1575587015.0,
          "num_crossposts": 1,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "philosophy",
          "selftext": "",
          "author_fullname": "t2_37edz",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "What Jacques Derrida understood about friendship | In 'The Politics of Friendship,' the French philosopher seems to describe a bygone way of being, one racked with less anxiety about the bonds that tie us together",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/philosophy",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "blog",
          "downs": 0,
          "thumbnail_height": 78,
          "hide_score": false,
          "name": "t3_e6iqud",
          "quarantine": false,
          "link_flair_text_color": "light",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1087,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Blog",
          "can_mod_post": false,
          "score": 1087,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "link",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1575588705.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "newyorker.com",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/OyRvdEXIKQTL32xg8GDBoQqTrmtTgm8cc0wE9-y9u9I.jpg?auto=webp&amp;s=8d57fb7ca70b28aa819db7999205a968331a2906",
                  "width": 1120,
                  "height": 630
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/OyRvdEXIKQTL32xg8GDBoQqTrmtTgm8cc0wE9-y9u9I.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=799ee4f05cd0afde4fdb0f871ea37094b9017ecc",
                    "width": 108,
                    "height": 60
                  },
                  {
                    "url": "https://external-preview.redd.it/OyRvdEXIKQTL32xg8GDBoQqTrmtTgm8cc0wE9-y9u9I.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=02503e16c8c58db1c3940fb05cfb82df3572db78",
                    "width": 216,
                    "height": 121
                  },
                  {
                    "url": "https://external-preview.redd.it/OyRvdEXIKQTL32xg8GDBoQqTrmtTgm8cc0wE9-y9u9I.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=61a33b50838ca32a000c2c4ae8b5cc5e2a21d238",
                    "width": 320,
                    "height": 180
                  },
                  {
                    "url": "https://external-preview.redd.it/OyRvdEXIKQTL32xg8GDBoQqTrmtTgm8cc0wE9-y9u9I.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4859322495f6a19095a3ef456484bb3145608ace",
                    "width": 640,
                    "height": 360
                  },
                  {
                    "url": "https://external-preview.redd.it/OyRvdEXIKQTL32xg8GDBoQqTrmtTgm8cc0wE9-y9u9I.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=90ebf10dfd06b64f8a7bab151ecd82206d2d4af0",
                    "width": 960,
                    "height": 540
                  },
                  {
                    "url": "https://external-preview.redd.it/OyRvdEXIKQTL32xg8GDBoQqTrmtTgm8cc0wE9-y9u9I.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=e449c16ef21af746ac29ac91bb7a84345fd54f8f",
                    "width": 1080,
                    "height": 607
                  }
                ],
                "variants": {},
                "id": "wgwsXbBDwTImYvhkg_vDDh43YrXj5Y1a8xU31IRQNso"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "3d6c7bcc-c909-11e4-ba3c-22000b3885ab",
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh5b",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#7193ff",
          "id": "e6iqud",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "NMW",
          "discussion_type": null,
          "num_comments": 110,
          "send_replies": false,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/philosophy/comments/e6iqud/what_jacques_derrida_understood_about_friendship/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.newyorker.com/books/second-read/what-jacques-derrida-understood-about-friendship",
          "subreddit_subscribers": 14309013,
          "created_utc": 1575559905.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "",
          "author_fullname": "t2_wooym",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Deadpool: A dead-simple async pool for connections and objects of any type",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": 140,
          "hide_score": false,
          "name": "t3_e5h6r5",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 131,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 131,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "link",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1575408900.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "github.com",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/yQrsRd4BEFAIwu4doQUoYsOBxC9DrQwhEsZFPqKYpSw.jpg?auto=webp&amp;s=4ba70e2c1467c7b1ae86c50998f2337f6ba09aa4",
                  "width": 400,
                  "height": 400
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/yQrsRd4BEFAIwu4doQUoYsOBxC9DrQwhEsZFPqKYpSw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=78a8f830ef5ce3624aa42a24f69c3a12f6e56d93",
                    "width": 108,
                    "height": 108
                  },
                  {
                    "url": "https://external-preview.redd.it/yQrsRd4BEFAIwu4doQUoYsOBxC9DrQwhEsZFPqKYpSw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c5b84891a1d422fe266a884f99a427e656517fd9",
                    "width": 216,
                    "height": 216
                  },
                  {
                    "url": "https://external-preview.redd.it/yQrsRd4BEFAIwu4doQUoYsOBxC9DrQwhEsZFPqKYpSw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=39a317dde77ae1fd85d10cb7105ea4a445d019fc",
                    "width": 320,
                    "height": 320
                  }
                ],
                "variants": {},
                "id": "B5RcDA8ELuJVgAHwS1OfX0obKjCZJitMUEditDFNAkk"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "e5h6r5",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "darin_gordon",
          "discussion_type": null,
          "num_comments": 16,
          "send_replies": false,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/rust/comments/e5h6r5/deadpool_a_deadsimple_async_pool_for_connections/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://github.com/bikeshedder/deadpool/",
          "subreddit_subscribers": 83126,
          "created_utc": 1575380100.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "",
          "author_fullname": "t2_nyz1p2x",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "How To RiiR",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": 140,
          "hide_score": false,
          "name": "t3_e4kad5",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 218,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 218,
          "approved_by": null,
          "author_premium": true,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "link",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1575249528.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "adventures.michaelfbryan.com",
          "allow_live_comments": true,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/ACWdL7vFyVb6eZitqXHVnqNqBLINjEPiXY9fNPZ6ofg.jpg?auto=webp&amp;s=3aa668bc4d59e03e096ff5bc748e98ea9154c812",
                  "width": 640,
                  "height": 640
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/ACWdL7vFyVb6eZitqXHVnqNqBLINjEPiXY9fNPZ6ofg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3e7ce98352d42fde94293f7b0e24b80317872f3b",
                    "width": 108,
                    "height": 108
                  },
                  {
                    "url": "https://external-preview.redd.it/ACWdL7vFyVb6eZitqXHVnqNqBLINjEPiXY9fNPZ6ofg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=26a1338151f1d37fd369ddd9bd82bd39955ea0b2",
                    "width": 216,
                    "height": 216
                  },
                  {
                    "url": "https://external-preview.redd.it/ACWdL7vFyVb6eZitqXHVnqNqBLINjEPiXY9fNPZ6ofg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c06e9eb2b5fb5f0765dc1d52776e6d0d440e028f",
                    "width": 320,
                    "height": 320
                  },
                  {
                    "url": "https://external-preview.redd.it/ACWdL7vFyVb6eZitqXHVnqNqBLINjEPiXY9fNPZ6ofg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=cc97196bc82ba3149f1a8114dce7952cdf88855a",
                    "width": 640,
                    "height": 640
                  }
                ],
                "variants": {},
                "id": "cnOQTPoMcrW3OXaaKD-m506pVN6RvkjxsJ_tBMsCSxw"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "e4kad5",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Michael-F-Bryan",
          "discussion_type": null,
          "num_comments": 13,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/rust/comments/e4kad5/how_to_riir/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "http://adventures.michaelfbryan.com/posts/how-to-riir/index.html",
          "subreddit_subscribers": 83126,
          "created_utc": 1575220728.0,
          "num_crossposts": 1,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "golang",
          "selftext": "Title says it all really.",
          "author_fullname": "t2_35r22fco",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "What in your opinion is the best written scalable piece of open source go code you've seen?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/golang",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_e3ydjy",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 65,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 65,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1575157788.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.golang",
          "allow_live_comments": true,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Title says it all really.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2rc7j",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "e3ydjy",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "BritishBotWriter",
          "discussion_type": null,
          "num_comments": 34,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/golang/comments/e3ydjy/what_in_your_opinion_is_the_best_written_scalable/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/golang/comments/e3ydjy/what_in_your_opinion_is_the_best_written_scalable/",
          "subreddit_subscribers": 96756,
          "created_utc": 1575128988.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "food",
          "selftext": "",
          "author_fullname": "t2_xwof1",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 1,
          "clicked": false,
          "title": "[homemade] creamy tomato basil soup with bacon and ghost pepper cheese sandwich",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/food",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "image",
          "downs": 0,
          "thumbnail_height": 104,
          "hide_score": false,
          "name": "t3_e16t4u",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 21104,
          "total_awards_received": 1,
          "media_embed": {
            "content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2Fi5nqFO5%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D900&amp;url=https%3A%2F%2Fimgur.com%2Fi5nqFO5&amp;image=https%3A%2F%2Fi.imgur.com%2Fi5nqFO5.jpg%3Ffb&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"600\" height=\"579\" scrolling=\"no\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;",
            "width": 600,
            "scrolling": false,
            "height": 579
          },
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": {
            "oembed": {
              "provider_url": "http://imgur.com",
              "description": "Post with 0 votes and 0 views.",
              "title": "Imgur",
              "url": "https://imgur.com/i5nqFO5",
              "thumbnail_width": 600,
              "height": 579,
              "width": 600,
              "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2Fi5nqFO5%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D900&amp;url=https%3A%2F%2Fimgur.com%2Fi5nqFO5&amp;image=https%3A%2F%2Fi.imgur.com%2Fi5nqFO5.jpg%3Ffb&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"600\" height=\"579\" scrolling=\"no\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;",
              "version": "1.0",
              "provider_name": "Imgur",
              "thumbnail_url": "https://i.imgur.com/i5nqFO5.jpg?fb",
              "type": "rich",
              "thumbnail_height": 315
            },
            "type": "imgur.com"
          },
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {
            "content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2Fi5nqFO5%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D900&amp;url=https%3A%2F%2Fimgur.com%2Fi5nqFO5&amp;image=https%3A%2F%2Fi.imgur.com%2Fi5nqFO5.jpg%3Ffb&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"600\" height=\"579\" scrolling=\"no\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;",
            "width": 600,
            "scrolling": false,
            "media_domain_url": "https://www.redditmedia.com/mediaembed/e16t4u",
            "height": 579
          },
          "link_flair_text": "Image",
          "can_mod_post": false,
          "score": 21104,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "https://a.thumbs.redditmedia.com/UX2O8d9MrPy8SDxiaMIxG3plJD5Va_-2wp_1wuCRJ24.jpg",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {
            "gid_2": 1
          },
          "post_hint": "link",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1574666712.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "imgur.com",
          "allow_live_comments": true,
          "selftext_html": null,
          "likes": true,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/oRWQ-JluyzH86bQ1inivEd8v4LfdqKZryfLrFcRJAho.jpg?auto=webp&amp;s=ff181dbd41b9e99356f055f483e7c20f42351fb0",
                  "width": 3226,
                  "height": 2419
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/oRWQ-JluyzH86bQ1inivEd8v4LfdqKZryfLrFcRJAho.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c77df707a65d75644f6d7f325413734b51bc8970",
                    "width": 108,
                    "height": 80
                  },
                  {
                    "url": "https://external-preview.redd.it/oRWQ-JluyzH86bQ1inivEd8v4LfdqKZryfLrFcRJAho.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3f822df6ddea82d86af6050fe0899a2d1b03720e",
                    "width": 216,
                    "height": 161
                  },
                  {
                    "url": "https://external-preview.redd.it/oRWQ-JluyzH86bQ1inivEd8v4LfdqKZryfLrFcRJAho.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d005ec70c001f9402f502a2e4ddee99d87b1390e",
                    "width": 320,
                    "height": 239
                  },
                  {
                    "url": "https://external-preview.redd.it/oRWQ-JluyzH86bQ1inivEd8v4LfdqKZryfLrFcRJAho.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1594d5bc17f3c78318a81d7e4fbde188bac0a390",
                    "width": 640,
                    "height": 479
                  },
                  {
                    "url": "https://external-preview.redd.it/oRWQ-JluyzH86bQ1inivEd8v4LfdqKZryfLrFcRJAho.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=1215ea67ab9be360acf67d4770860af54b1824db",
                    "width": 960,
                    "height": 719
                  },
                  {
                    "url": "https://external-preview.redd.it/oRWQ-JluyzH86bQ1inivEd8v4LfdqKZryfLrFcRJAho.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=46e357380ca0c060f431cd4e241ef7adf49bfdb0",
                    "width": 1080,
                    "height": 809
                  }
                ],
                "variants": {},
                "id": "4Ql9d27hf5daBhmg5ruMYswIqEybn2ghtwMv0z-Dx3k"
              }
            ],
            "enabled": false
          },
          "all_awardings": [
            {
              "count": 1,
              "is_enabled": true,
              "subreddit_id": null,
              "description": "Gives the author a week of Reddit Premium, %{coin_symbol}100 Coins to do with as they please, and shows a Gold Award.",
              "end_date": null,
              "award_sub_type": "GLOBAL",
              "coin_reward": 100,
              "icon_url": "https://www.redditstatic.com/gold/awards/icon/gold_512.png",
              "days_of_premium": 7,
              "is_new": false,
              "id": "gid_2",
              "icon_height": 512,
              "resized_icons": [
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_16.png",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_32.png",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_48.png",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_64.png",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_128.png",
                  "width": 128,
                  "height": 128
                }
              ],
              "days_of_drip_extension": 0,
              "award_type": "global",
              "start_date": null,
              "coin_price": 500,
              "icon_width": 512,
              "subreddit_coin_reward": 0,
              "name": "Gold"
            }
          ],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh55",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "e16t4u",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "sc1f1wasab1",
          "discussion_type": null,
          "num_comments": 278,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/food/comments/e16t4u/homemade_creamy_tomato_basil_soup_with_bacon_and/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://imgur.com/i5nqFO5",
          "subreddit_subscribers": 17271665,
          "created_utc": 1574637912.0,
          "num_crossposts": 2,
          "media": {
            "oembed": {
              "provider_url": "http://imgur.com",
              "description": "Post with 0 votes and 0 views.",
              "title": "Imgur",
              "url": "https://imgur.com/i5nqFO5",
              "thumbnail_width": 600,
              "height": 579,
              "width": 600,
              "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2Fi5nqFO5%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D900&amp;url=https%3A%2F%2Fimgur.com%2Fi5nqFO5&amp;image=https%3A%2F%2Fi.imgur.com%2Fi5nqFO5.jpg%3Ffb&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"600\" height=\"579\" scrolling=\"no\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;",
              "version": "1.0",
              "provider_name": "Imgur",
              "thumbnail_url": "https://i.imgur.com/i5nqFO5.jpg?fb",
              "type": "rich",
              "thumbnail_height": 315
            },
            "type": "imgur.com"
          },
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "golang",
          "selftext": "",
          "author_fullname": "t2_dxryp",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Simple dependency injection in Go with Fx",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/golang",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_dzvd6y",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 15,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 15,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1574423090.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "blog.huyage.dev",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2rc7j",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "dzvd6y",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "trustyhardware",
          "discussion_type": null,
          "num_comments": 15,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/golang/comments/dzvd6y/simple_dependency_injection_in_go_with_fx/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://blog.huyage.dev/posts/simple-dependency-injection-in-go/",
          "subreddit_subscribers": 96756,
          "created_utc": 1574394290.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "programming",
          "selftext": "",
          "author_fullname": "t2_177xi7xz",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 1,
          "clicked": false,
          "title": "htop explained",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/programming",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": 78,
          "hide_score": false,
          "name": "t3_dx6swz",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1659,
          "total_awards_received": 1,
          "media_embed": {},
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 1659,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {
            "gid_2": 1
          },
          "post_hint": "link",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1573939139.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "peteris.rocks",
          "allow_live_comments": true,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/LtCgpwGFL1aJO7aTrzWYzHeOemMVZ5u92LmASK9cGrc.jpg?auto=webp&amp;s=f0f69bfe6828f423db6bc5326d645354b7a47c76",
                  "width": 973,
                  "height": 546
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/LtCgpwGFL1aJO7aTrzWYzHeOemMVZ5u92LmASK9cGrc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0c61fb8c99213040599b682558df0223151abc48",
                    "width": 108,
                    "height": 60
                  },
                  {
                    "url": "https://external-preview.redd.it/LtCgpwGFL1aJO7aTrzWYzHeOemMVZ5u92LmASK9cGrc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=156919c0f21e2a2288f8c7d1af42910784c07d4d",
                    "width": 216,
                    "height": 121
                  },
                  {
                    "url": "https://external-preview.redd.it/LtCgpwGFL1aJO7aTrzWYzHeOemMVZ5u92LmASK9cGrc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f4a18fddd4931a89776d29a54062797c0c195cf3",
                    "width": 320,
                    "height": 179
                  },
                  {
                    "url": "https://external-preview.redd.it/LtCgpwGFL1aJO7aTrzWYzHeOemMVZ5u92LmASK9cGrc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d413bcbb8b084f10778b4fcb629da7e349dc298d",
                    "width": 640,
                    "height": 359
                  },
                  {
                    "url": "https://external-preview.redd.it/LtCgpwGFL1aJO7aTrzWYzHeOemMVZ5u92LmASK9cGrc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5115f125b4f1cb9048f10cf316e3e835f8d24937",
                    "width": 960,
                    "height": 538
                  }
                ],
                "variants": {},
                "id": "ZFTUln7WUVWgFRbaWY7AOY9LM0iekEkGMjw1BiFzu6k"
              }
            ],
            "enabled": false
          },
          "all_awardings": [
            {
              "count": 1,
              "is_enabled": true,
              "subreddit_id": null,
              "description": "Gives the author a week of Reddit Premium, %{coin_symbol}100 Coins to do with as they please, and shows a Gold Award.",
              "end_date": null,
              "award_sub_type": "GLOBAL",
              "coin_reward": 100,
              "icon_url": "https://www.redditstatic.com/gold/awards/icon/gold_512.png",
              "days_of_premium": 7,
              "is_new": false,
              "id": "gid_2",
              "icon_height": 512,
              "resized_icons": [
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_16.png",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_32.png",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_48.png",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_64.png",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_128.png",
                  "width": 128,
                  "height": 128
                }
              ],
              "days_of_drip_extension": 0,
              "award_type": "global",
              "start_date": null,
              "coin_price": 500,
              "icon_width": 512,
              "subreddit_coin_reward": 0,
              "name": "Gold"
            }
          ],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2fwo",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "dx6swz",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "preetamdsouza",
          "discussion_type": null,
          "num_comments": 81,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/programming/comments/dx6swz/htop_explained/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://peteris.rocks/blog/htop/",
          "subreddit_subscribers": 2365333,
          "created_utc": 1573910339.0,
          "num_crossposts": 2,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "",
          "author_fullname": "t2_2u9hfcag",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Types Are for People, not Computers",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_dwssv6",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 102,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 102,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1573862699.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "ethankent.dev",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "dwssv6",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "NoraCodes",
          "discussion_type": null,
          "num_comments": 69,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/rust/comments/dwssv6/types_are_for_people_not_computers/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://ethankent.dev/posts/types_are_for_people/",
          "subreddit_subscribers": 83126,
          "created_utc": 1573833899.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "",
          "author_fullname": "t2_fxbp3",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Thoughts on Error Handling in Rust",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": 140,
          "hide_score": false,
          "name": "t3_dwprb3",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": "",
          "subreddit_type": "public",
          "ups": 172,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 172,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": "contrib",
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "link",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1573847784.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "lukaskalbertodt.github.io",
          "allow_live_comments": true,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/JRQmWW9xdidWzcihH9x__fcEKdqzV3wUR7bsNMZ_1aE.jpg?auto=webp&amp;s=11127d1a6200f7d0e86393441f331059a10eeb76",
                  "width": 512,
                  "height": 512
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/JRQmWW9xdidWzcihH9x__fcEKdqzV3wUR7bsNMZ_1aE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5adc50ec3f6dff9fefdb6df1a1669f6caf94d59d",
                    "width": 108,
                    "height": 108
                  },
                  {
                    "url": "https://external-preview.redd.it/JRQmWW9xdidWzcihH9x__fcEKdqzV3wUR7bsNMZ_1aE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9b33fa6f32819b476b3b111d0e44c86a2f57b022",
                    "width": 216,
                    "height": 216
                  },
                  {
                    "url": "https://external-preview.redd.it/JRQmWW9xdidWzcihH9x__fcEKdqzV3wUR7bsNMZ_1aE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b8776e7bd39f08ae8da27ee16a1e7b8b183e5140",
                    "width": 320,
                    "height": 320
                  }
                ],
                "variants": {},
                "id": "vdKEkOsKpqEgaobDzq9I9FcMh68-6zStkNn-jGCVaTw"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": "[Lukas Kalbertodt] programmieren-in-rust \u00b7 term-painter",
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "dwprb3",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "DebuggingPanda",
          "discussion_type": null,
          "num_comments": 99,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": "dark",
          "permalink": "/r/rust/comments/dwprb3/thoughts_on_error_handling_in_rust/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://lukaskalbertodt.github.io/2019/11/14/thoughts-on-error-handling-in-rust.html",
          "subreddit_subscribers": 83126,
          "created_utc": 1573818984.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "golang",
          "selftext": "",
          "author_fullname": "t2_uobo1",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Grep from First Principles, in Golang",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/golang",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": 84,
          "hide_score": false,
          "name": "t3_dwuwlc",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 45,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 45,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "link",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1573871857.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "willdemaine.ghost.io",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/41_3yr1jdN2lyp7YVbdhIsfxL0V6qQk86P7IzXhGhew.jpg?auto=webp&amp;s=6d1272015e484003ceb17965246c45ef19e75065",
                  "width": 646,
                  "height": 391
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/41_3yr1jdN2lyp7YVbdhIsfxL0V6qQk86P7IzXhGhew.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=10af91b6b939f515987572b55891b29dbe683fcc",
                    "width": 108,
                    "height": 65
                  },
                  {
                    "url": "https://external-preview.redd.it/41_3yr1jdN2lyp7YVbdhIsfxL0V6qQk86P7IzXhGhew.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6a81d67dd4c19a9e40ff9fea400dabfcd433b55e",
                    "width": 216,
                    "height": 130
                  },
                  {
                    "url": "https://external-preview.redd.it/41_3yr1jdN2lyp7YVbdhIsfxL0V6qQk86P7IzXhGhew.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=88dd1da0734ff45b6b258962705c59000c8d296a",
                    "width": 320,
                    "height": 193
                  },
                  {
                    "url": "https://external-preview.redd.it/41_3yr1jdN2lyp7YVbdhIsfxL0V6qQk86P7IzXhGhew.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b574968d4c032626c562256516c64b69d899bb4e",
                    "width": 640,
                    "height": 387
                  }
                ],
                "variants": {},
                "id": "FPRVEzxtzCfnPhwl8x8nOpoqQPl3KWOxsClCN98KJo8"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2rc7j",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "dwuwlc",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "frebb",
          "discussion_type": null,
          "num_comments": 1,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/golang/comments/dwuwlc/grep_from_first_principles_in_golang/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://willdemaine.ghost.io/grep-from-first-principles-in-golang/",
          "subreddit_subscribers": 96756,
          "created_utc": 1573843057.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "I don't know rust currently. I would like to know how exactly the much touted compile time memory management works from a C perspective. (Little explaination or link), thanks.",
          "author_fullname": "t2_42cz2xr8",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Someone explain rust memory management from C perspective?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_dvqibf",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 62,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 62,
          "approved_by": null,
          "author_premium": true,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1573673711.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.rust",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know rust currently. I would like to know how exactly the much touted compile time memory management works from a C perspective. (Little explaination or link), thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "dvqibf",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "linus_stallman",
          "discussion_type": null,
          "num_comments": 54,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/rust/comments/dvqibf/someone_explain_rust_memory_management_from_c/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/rust/comments/dvqibf/someone_explain_rust_memory_management_from_c/",
          "subreddit_subscribers": 83126,
          "created_utc": 1573644911.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "learnrust",
          "selftext": "Say we have:\n```\n#[derive(Debug)]\nenum Whatever{\n    whatever1(String),\n    whatever2(String),\n}\nimpl Whatever{\n    fn fxn1(&amp;self){\n        println!(\"{:?}\", self);\n    }\n}\n```\n\nConsidering I've passed a reference of `self` to `fxn1`, what does it mean to `println!(\"{:?}\", self)` (option 1) rather than `println!(\"{:?}\", &amp;self)` (option 2)?\n\nI've tested both of these options and none of them take ownership of anything and output the same result. Am I creating a reference of a reference in option 2 then? Are any of the two preferred?\nThanks in advance!",
          "author_fullname": "t2_15ys00",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Using self rather than &amp;self inside fn with parameter &amp;self. Is there a difference?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/learnrust",
          "hidden": false,
          "pwls": null,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_dv2b8l",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 6,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 6,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1573549368.0,
          "link_flair_type": "text",
          "wls": null,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.learnrust",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Say we have:\n```&lt;/p&gt;\n\n&lt;h1&gt;[derive(Debug)]&lt;/h1&gt;\n\n&lt;p&gt;enum Whatever{\n    whatever1(String),\n    whatever2(String),\n}\nimpl Whatever{\n    fn fxn1(&amp;amp;self){\n        println!(&amp;quot;{:?}&amp;quot;, self);\n    }\n}\n```&lt;/p&gt;\n\n&lt;p&gt;Considering I&amp;#39;ve passed a reference of &lt;code&gt;self&lt;/code&gt; to &lt;code&gt;fxn1&lt;/code&gt;, what does it mean to &lt;code&gt;println!(&amp;quot;{:?}&amp;quot;, self)&lt;/code&gt; (option 1) rather than &lt;code&gt;println!(&amp;quot;{:?}&amp;quot;, &amp;amp;self)&lt;/code&gt; (option 2)?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve tested both of these options and none of them take ownership of anything and output the same result. Am I creating a reference of a reference in option 2 then? Are any of the two preferred?\nThanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_3amtr",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "dv2b8l",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "chiarl",
          "discussion_type": null,
          "num_comments": 5,
          "send_replies": true,
          "whitelist_status": null,
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/learnrust/comments/dv2b8l/using_self_rather_than_self_inside_fn_with/",
          "parent_whitelist_status": null,
          "stickied": false,
          "url": "https://www.reddit.com/r/learnrust/comments/dv2b8l/using_self_rather_than_self_inside_fn_with/",
          "subreddit_subscribers": 2044,
          "created_utc": 1573520568.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "",
          "author_fullname": "t2_dc72a",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Announcing async-std 1.0",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": 97,
          "hide_score": false,
          "name": "t3_duvdzz",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": "",
          "subreddit_type": "public",
          "ups": 452,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 452,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": "contrib",
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "link",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1573521099.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "async.rs",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/Aw5m5wvKOqI-4swcujOoE553AwCyvtTX7OwY0svKnuI.jpg?auto=webp&amp;s=bb2ba2740d7105e6310d27c69f2f02e1856e8c46",
                  "width": 446,
                  "height": 312
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/Aw5m5wvKOqI-4swcujOoE553AwCyvtTX7OwY0svKnuI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=933b10b580c2cdd3bc070599275babedde18e202",
                    "width": 108,
                    "height": 75
                  },
                  {
                    "url": "https://external-preview.redd.it/Aw5m5wvKOqI-4swcujOoE553AwCyvtTX7OwY0svKnuI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b5e0c176c00304ce523c7f4a77ebd2e5cb8d3395",
                    "width": 216,
                    "height": 151
                  },
                  {
                    "url": "https://external-preview.redd.it/Aw5m5wvKOqI-4swcujOoE553AwCyvtTX7OwY0svKnuI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0c7d6f58577fb1f3bfe59d3d5ba532a8499a2bb8",
                    "width": 320,
                    "height": 223
                  }
                ],
                "variants": {},
                "id": "-cOqYINCAxgSZ7lhVqsNrZy8pKMwh0hD5TaYXLIlLSA"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": "rust-community \u00b7 rustfest",
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "duvdzz",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "fgilcher",
          "discussion_type": null,
          "num_comments": 90,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": "dark",
          "permalink": "/r/rust/comments/duvdzz/announcing_asyncstd_10/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://async.rs/blog/announcing-async-std-1-0/",
          "subreddit_subscribers": 83126,
          "created_utc": 1573492299.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "About https://www.reddit.com/r/rust/comments/6z7o6e/rust_showed_quiet_poor_results_on_highload/\n\nWanted to comment initially, then it grew so large that it deserves a port. Besides, I wanted to highlight some issues.\n\nBut first, I\u2019d like to clarify some points some people in other thread seem to get wrong.\n\n* Contest is bicycle-building. True, but I didn\u2019t use a single bicycle and still didn\u2019t manage to solve this, pretty simple, problem. The problem itself *is* real-world, and if you don\u2019t take short-cuts, it really could be some microservice in geolocation startup. This is an issue.\n\n* There weren\u2019t many Rust entries, so Rust might actually be good. True, but difference between being given big penalty due to timeouts and being in top-50 is due to some real problems. I don\u2019t call to directly compare top-10 results with results of top Rust solution (AFAIK there was 1 in top 50). I consider every solution in top-50 \u201cfast\u201d. But, being able to answer to a query in 2 seconds seems to be a reasonable requirement. I couldn\u2019t make it - see below. This is also an issue.\n\nNow to my experiences.\n\n* I started at this contest very late - it was planned to take a month, and I started 10 days before the end. I participated when working full time at my job.\n\n* I\u2019m *not* a backend developer. I have some understanding of servers, but no working experience in the area.\n\n* I picked Rocket as framework because it allows to skip the boilerplate (considering I only have 10 days) and being able to compile on stable isn't a problem for contest.\n\n* I somehow totally overlooked Rocket *isn't* built on Tokio. I probably *would* reconsider, but the primary other framework I could use is Gotham, and it *really* lacks in documentation. I know it's only 0.1, but all you have is API docs, 1 example app and half-written book. Rocket has comprehensive documentation that I've been able to navigate and actually make stuff working in matter of minutes - something very valuable for contest like this.\n\n* AFAIK Iron also doesn't offer async IO yet.\n\n* I built first working implementation in about 10 hours - 1 evening and 1 full day on weekend. This, I believe, is pretty good result, considering my lack of experience. This implementation had some tests fail - as I recall, it had to do with calculating age of users.\n\n* There were 2 benchmarks - a test one and a rating one. Both of them consist of 3 phases - some GETs, then some POSTs with updates and new entities, then some more GETs. They also have varying load profiles. I may be wrong on exact numbers, but test one performed GETs with about 100 instances (these can be considered clients) and peak rps of about 500. Rating one had peak 500 instances I believe, with peak rps of 2000.\n\n* This initial implementation totally sucked at workload. I had a lot of timeouts even in test benchmark. This is to be expected. There were 2 types of queries that should return aggregates - average rating of location and all visits of particular user. Initially I had no indices (or caches) so on every request for aggregate info I\u2019d go and loop through entire database, filtering as needed (so to speak; it was actually 3 HashMap&lt;u32, Entity&gt;, where entity is User, Visit and Location). \n\n* By this time I had about 3 days left and, well, I panicked, so I wouldn\u2019t be able to do any substantial work - like implementing caches - at that point.\n\n* I decided to play with amount of workers Rocket allocates. With about 1000 workers, my *non-caching* implementation passed test benchmark with about 99% correct results. (\u201ccorrect results\u201d here means \u201ccorrect response, given in time\u201d - timeout was 2 seconds). Then I sent it to rating, and there it managed to give correct answers in time in only about 10% of the cases. Rest was predominantly timeouts. I tried to increase workers count even more (2000 - 4000), but then some spurious errors about buffers\u2019 sizes not being enough popped up - I thought it was something that send() says.\n\n* That put me on 230th place out of 300, with ridiculous amount of penalty due to timeouts.\n\n* Main competition closes, they open sandbox - I could submit more solutions for rating, but they wouldn\u2019t count for prizes.\n\n* Later I\u2019ve been able to implement caches. Latencies went down and I\u2019ve been able to use less workers, but not substantially.\n\n* I fixed age calculation, giving 100% correct results on test benchmark. This was, I think, with 1000 workers.\n\n* With some back-and-forth, I got about 15% correct results in rating, and that was it.\n\n* Notice that entire stack is production quality, not hacked together bicycle (apart from database). But even with DB, hashmaps that would be periodically snapshotted to disk might be okay for some microservice.\n\nNow, what I\u2019d definitely need to do better, in order of importance:\n\n* Gotham, or any other async IO framework with decent documentation.\n\n* Being able to serde to struct with ArrayString. All string data had size bounds - so using heap-backed String was clearly a performance hit. There wasn\u2019t enough time to implement this serde during competition.\n\n* Being able to differentiate between being given incorrect JSON and JSON that has missing fields. I initially had structs like LocationUpdate { name: Option&lt;String&gt;, country: Option&lt;String&gt;, distance: Option&lt;u32&gt;, \u2026 }. Thing is, LocationUpdate might update name but not country and vice-versa. But, when distance doesn\u2019t parse as u32 you get None, and when distance is simply isn\u2019t passed you also get None. I needed to respond with HTTP 400 when a field is null (not treat it as missing). I figured there was a way to use Result to check for parsing errors, but it was somewhat complex, as it has RawStr&lt;\u2019a&gt; in Err, meaning that lifetime leaks around entire codebase. Besides, I\u2019d have to have Option&lt;Result&lt;u32&gt;&gt;, as the field could still be missing. In the end I invented a hack that used #[serde(default)] on every field, and fields themselves were simply String, u32 (no Options). Then, serde takes care of all parsing errors and Rocket responds with error before handler receives control - so missing fields are substituted with defaults and erroneous ones give errors.\n\n* Clearer documentation on queuing of requests - does Rocket do it, or OS? How to configure size of queue? (I actually discovered there\u2019s no way to configure it in standard TcpListener: https://github.com/SergioBenitez/Rocket/issues/403#issuecomment-328244763 )\n\n* An example of how to calculate age of user based on DOB Unix timestamp and \u201cnow\u201d Unix timestamp - for cookbook.\n\nOverall: I don\u2019t consider it a failure, or attribute poor results to Rust really. I\u2019m interested in concrete improvements that can be made, and I believe Rust\u2019s results in these types of contests will improve if we work on the issues. Some of them are being worked on regardless of these contest results, I know - like improvement of Gotham. Others need some highlight.\n\nHere's source code of my entry: https://github.com/mkpankov/rustler",
          "author_fullname": "t2_j73zb",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "My experience participating in HighLoad Cup (re: other thread)",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_6zdvza",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 84,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 84,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": 1505115070.0,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "self",
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1505143287.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.rust",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;About &lt;a href=\"https://www.reddit.com/r/rust/comments/6z7o6e/rust_showed_quiet_poor_results_on_highload/\"&gt;https://www.reddit.com/r/rust/comments/6z7o6e/rust_showed_quiet_poor_results_on_highload/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Wanted to comment initially, then it grew so large that it deserves a port. Besides, I wanted to highlight some issues.&lt;/p&gt;\n\n&lt;p&gt;But first, I\u2019d like to clarify some points some people in other thread seem to get wrong.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Contest is bicycle-building. True, but I didn\u2019t use a single bicycle and still didn\u2019t manage to solve this, pretty simple, problem. The problem itself &lt;em&gt;is&lt;/em&gt; real-world, and if you don\u2019t take short-cuts, it really could be some microservice in geolocation startup. This is an issue.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;There weren\u2019t many Rust entries, so Rust might actually be good. True, but difference between being given big penalty due to timeouts and being in top-50 is due to some real problems. I don\u2019t call to directly compare top-10 results with results of top Rust solution (AFAIK there was 1 in top 50). I consider every solution in top-50 \u201cfast\u201d. But, being able to answer to a query in 2 seconds seems to be a reasonable requirement. I couldn\u2019t make it - see below. This is also an issue.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Now to my experiences.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;I started at this contest very late - it was planned to take a month, and I started 10 days before the end. I participated when working full time at my job.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;I\u2019m &lt;em&gt;not&lt;/em&gt; a backend developer. I have some understanding of servers, but no working experience in the area.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;I picked Rocket as framework because it allows to skip the boilerplate (considering I only have 10 days) and being able to compile on stable isn&amp;#39;t a problem for contest.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;I somehow totally overlooked Rocket &lt;em&gt;isn&amp;#39;t&lt;/em&gt; built on Tokio. I probably &lt;em&gt;would&lt;/em&gt; reconsider, but the primary other framework I could use is Gotham, and it &lt;em&gt;really&lt;/em&gt; lacks in documentation. I know it&amp;#39;s only 0.1, but all you have is API docs, 1 example app and half-written book. Rocket has comprehensive documentation that I&amp;#39;ve been able to navigate and actually make stuff working in matter of minutes - something very valuable for contest like this.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;AFAIK Iron also doesn&amp;#39;t offer async IO yet.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;I built first working implementation in about 10 hours - 1 evening and 1 full day on weekend. This, I believe, is pretty good result, considering my lack of experience. This implementation had some tests fail - as I recall, it had to do with calculating age of users.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;There were 2 benchmarks - a test one and a rating one. Both of them consist of 3 phases - some GETs, then some POSTs with updates and new entities, then some more GETs. They also have varying load profiles. I may be wrong on exact numbers, but test one performed GETs with about 100 instances (these can be considered clients) and peak rps of about 500. Rating one had peak 500 instances I believe, with peak rps of 2000.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;This initial implementation totally sucked at workload. I had a lot of timeouts even in test benchmark. This is to be expected. There were 2 types of queries that should return aggregates - average rating of location and all visits of particular user. Initially I had no indices (or caches) so on every request for aggregate info I\u2019d go and loop through entire database, filtering as needed (so to speak; it was actually 3 HashMap&amp;lt;u32, Entity&amp;gt;, where entity is User, Visit and Location). &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;By this time I had about 3 days left and, well, I panicked, so I wouldn\u2019t be able to do any substantial work - like implementing caches - at that point.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;I decided to play with amount of workers Rocket allocates. With about 1000 workers, my &lt;em&gt;non-caching&lt;/em&gt; implementation passed test benchmark with about 99% correct results. (\u201ccorrect results\u201d here means \u201ccorrect response, given in time\u201d - timeout was 2 seconds). Then I sent it to rating, and there it managed to give correct answers in time in only about 10% of the cases. Rest was predominantly timeouts. I tried to increase workers count even more (2000 - 4000), but then some spurious errors about buffers\u2019 sizes not being enough popped up - I thought it was something that send() says.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;That put me on 230th place out of 300, with ridiculous amount of penalty due to timeouts.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Main competition closes, they open sandbox - I could submit more solutions for rating, but they wouldn\u2019t count for prizes.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Later I\u2019ve been able to implement caches. Latencies went down and I\u2019ve been able to use less workers, but not substantially.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;I fixed age calculation, giving 100% correct results on test benchmark. This was, I think, with 1000 workers.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;With some back-and-forth, I got about 15% correct results in rating, and that was it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Notice that entire stack is production quality, not hacked together bicycle (apart from database). But even with DB, hashmaps that would be periodically snapshotted to disk might be okay for some microservice.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Now, what I\u2019d definitely need to do better, in order of importance:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Gotham, or any other async IO framework with decent documentation.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Being able to serde to struct with ArrayString. All string data had size bounds - so using heap-backed String was clearly a performance hit. There wasn\u2019t enough time to implement this serde during competition.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Being able to differentiate between being given incorrect JSON and JSON that has missing fields. I initially had structs like LocationUpdate { name: Option&amp;lt;String&amp;gt;, country: Option&amp;lt;String&amp;gt;, distance: Option&amp;lt;u32&amp;gt;, \u2026 }. Thing is, LocationUpdate might update name but not country and vice-versa. But, when distance doesn\u2019t parse as u32 you get None, and when distance is simply isn\u2019t passed you also get None. I needed to respond with HTTP 400 when a field is null (not treat it as missing). I figured there was a way to use Result to check for parsing errors, but it was somewhat complex, as it has RawStr&amp;lt;\u2019a&amp;gt; in Err, meaning that lifetime leaks around entire codebase. Besides, I\u2019d have to have Option&amp;lt;Result&amp;lt;u32&amp;gt;&amp;gt;, as the field could still be missing. In the end I invented a hack that used #[serde(default)] on every field, and fields themselves were simply String, u32 (no Options). Then, serde takes care of all parsing errors and Rocket responds with error before handler receives control - so missing fields are substituted with defaults and erroneous ones give errors.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Clearer documentation on queuing of requests - does Rocket do it, or OS? How to configure size of queue? (I actually discovered there\u2019s no way to configure it in standard TcpListener: &lt;a href=\"https://github.com/SergioBenitez/Rocket/issues/403#issuecomment-328244763\"&gt;https://github.com/SergioBenitez/Rocket/issues/403#issuecomment-328244763&lt;/a&gt; )&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;An example of how to calculate age of user based on DOB Unix timestamp and \u201cnow\u201d Unix timestamp - for cookbook.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Overall: I don\u2019t consider it a failure, or attribute poor results to Rust really. I\u2019m interested in concrete improvements that can be made, and I believe Rust\u2019s results in these types of contests will improve if we work on the issues. Some of them are being worked on regardless of these contest results, I know - like improvement of Gotham. Others need some highlight.&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s source code of my entry: &lt;a href=\"https://github.com/mkpankov/rustler\"&gt;https://github.com/mkpankov/rustler&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": true,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/pvZsXiPzVq_vtYQ47mLkWQ8Yt05eABgLjriGmXdTdW0.jpg?auto=webp&amp;s=9663eede3731eb70356ee2f570ac73ca0f41597d",
                  "width": 400,
                  "height": 400
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/pvZsXiPzVq_vtYQ47mLkWQ8Yt05eABgLjriGmXdTdW0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0a685caa0fa23ff4aca7a7b08b7d8d9ff8ba0b54",
                    "width": 108,
                    "height": 108
                  },
                  {
                    "url": "https://external-preview.redd.it/pvZsXiPzVq_vtYQ47mLkWQ8Yt05eABgLjriGmXdTdW0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d969005f6c2c02be7dec13e6c29aba564d99f026",
                    "width": 216,
                    "height": 216
                  },
                  {
                    "url": "https://external-preview.redd.it/pvZsXiPzVq_vtYQ47mLkWQ8Yt05eABgLjriGmXdTdW0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6b57baa963009a89b5c2086699c016cd727192f1",
                    "width": 320,
                    "height": 320
                  }
                ],
                "variants": {},
                "id": "lICR11PM6sj100f-EW5dM4aQj_P5WQ-N-aiD1RV3NmU"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "6zdvza",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "mkpankov",
          "discussion_type": null,
          "num_comments": 25,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/rust/comments/6zdvza/my_experience_participating_in_highload_cup_re/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/rust/comments/6zdvza/my_experience_participating_in_highload_cup_re/",
          "subreddit_subscribers": 83126,
          "created_utc": 1505114487.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "",
          "author_fullname": "t2_3m7gickr",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 1,
          "clicked": false,
          "title": "Comparing high performance, parallel Rust and C++",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": 122,
          "hide_score": false,
          "name": "t3_dskdsa",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 319,
          "total_awards_received": 2,
          "media_embed": {},
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 319,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {
            "gid_1": 1,
            "gid_2": 1
          },
          "post_hint": "link",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1573093588.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "parallel-rust-cpp.github.io",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/X3KjQm3oOs2x0kEYazzXQlgCXsvNq6VVzsw73FAVT10.jpg?auto=webp&amp;s=a0dbba4230bffa5d35a94c3a51a48be89bebf126",
                  "width": 1578,
                  "height": 1382
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/X3KjQm3oOs2x0kEYazzXQlgCXsvNq6VVzsw73FAVT10.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=026d5e04ea5617f1747d7bd257778acacad9a85f",
                    "width": 108,
                    "height": 94
                  },
                  {
                    "url": "https://external-preview.redd.it/X3KjQm3oOs2x0kEYazzXQlgCXsvNq6VVzsw73FAVT10.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=fb8bc21c90ae8aa58f3df34b03a6f16f55b7f1d9",
                    "width": 216,
                    "height": 189
                  },
                  {
                    "url": "https://external-preview.redd.it/X3KjQm3oOs2x0kEYazzXQlgCXsvNq6VVzsw73FAVT10.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a1f8a42c78263f434ae97c8cc4f8cba089495c0e",
                    "width": 320,
                    "height": 280
                  },
                  {
                    "url": "https://external-preview.redd.it/X3KjQm3oOs2x0kEYazzXQlgCXsvNq6VVzsw73FAVT10.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1422f32d7c2126ce292eb259f86666d942de47d2",
                    "width": 640,
                    "height": 560
                  },
                  {
                    "url": "https://external-preview.redd.it/X3KjQm3oOs2x0kEYazzXQlgCXsvNq6VVzsw73FAVT10.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=eb4ea63527bcd976a446e0886f864f5fef212a2e",
                    "width": 960,
                    "height": 840
                  },
                  {
                    "url": "https://external-preview.redd.it/X3KjQm3oOs2x0kEYazzXQlgCXsvNq6VVzsw73FAVT10.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=550aebf1cfa3b532f4edb146d8484bf7c9e545f2",
                    "width": 1080,
                    "height": 945
                  }
                ],
                "variants": {},
                "id": "OHwRCiVDI-E-W7oai2XDijjCANKQ-z6rtYPUaQr224s"
              }
            ],
            "enabled": false
          },
          "all_awardings": [
            {
              "count": 1,
              "is_enabled": true,
              "subreddit_id": null,
              "description": "Gives the author a week of Reddit Premium, %{coin_symbol}100 Coins to do with as they please, and shows a Gold Award.",
              "end_date": null,
              "award_sub_type": "GLOBAL",
              "coin_reward": 100,
              "icon_url": "https://www.redditstatic.com/gold/awards/icon/gold_512.png",
              "days_of_premium": 7,
              "is_new": false,
              "id": "gid_2",
              "icon_height": 512,
              "resized_icons": [
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_16.png",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_32.png",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_48.png",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_64.png",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/gold_128.png",
                  "width": 128,
                  "height": 128
                }
              ],
              "days_of_drip_extension": 0,
              "award_type": "global",
              "start_date": null,
              "coin_price": 500,
              "icon_width": 512,
              "subreddit_coin_reward": 0,
              "name": "Gold"
            },
            {
              "count": 1,
              "is_enabled": true,
              "subreddit_id": null,
              "description": "Shows the Silver Award... and that's it.",
              "end_date": null,
              "award_sub_type": "GLOBAL",
              "coin_reward": 0,
              "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png",
              "days_of_premium": 0,
              "is_new": false,
              "id": "gid_1",
              "icon_height": 512,
              "resized_icons": [
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png",
                  "width": 128,
                  "height": 128
                }
              ],
              "days_of_drip_extension": 0,
              "award_type": "global",
              "start_date": null,
              "coin_price": 100,
              "icon_width": 512,
              "subreddit_coin_reward": 0,
              "name": "Silver"
            }
          ],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "dskdsa",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "hilbertspacecake",
          "discussion_type": null,
          "num_comments": 35,
          "send_replies": false,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/rust/comments/dskdsa/comparing_high_performance_parallel_rust_and_c/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://parallel-rust-cpp.github.io",
          "subreddit_subscribers": 83126,
          "created_utc": 1573064788.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "linux",
          "selftext": "Hi everyone!\n\nBefore I begin, disclaimer: I've been meaning to find an appropriate place to post this, but I couldn't really think of one; I hope this stays up. \n\nI am a second-year computer science and physics undergraduate. Before I matriculated, I thought I was a tech pro when I could fix a broken Windows bootloader, configure an off-the-shelf router using its *GUI*, and slide some sliders on photos in Lightroom. Joining university was a simultaneously humbling and enlightening experience, when I realised my peers were writing hundreds, perhaps even thousands of lines of code per day; one person is a regular contributor to the Linux Kernel. Another group of people developed [this website](https://nusmods.com), to make my fellow students' lives easier when choosing our modules for the semester. Plenty others are *incredibly* talented and versatile; I felt (and still do feel) like a tiny fish in the Pacific. \n\nDespite that, beginning my CS career has also exposed me to dozens of FOSS initiatives and projects that I would have otherwise passed over, had I chosen another major: things like Arch Linux (I have it installed, but it is broken by my own volition and I have to find some time to reinstall it), Vim and Emacs (with respect to Vim: I know how to change modes, edit and quit, but that's it), LaTeX, KDE, the entire GNU initiative, Blender, Git (which I still don't know how to use), and so on, in no particular order. This list could get so long that it'd exhaust this post's character count.\n\nAll high-quality, professional, powerful software that gets things done, with nary a penny or cent needed to purchase these, and the complete source available to all.\n\nThat being said, even closed-source software is equally wondrous. I understand this is the Linux subreddit, but this is a general thank-you post to *everyone*, so things like MS Office 365, Adobe's suite (though slow and bloated), Windows, OS X, iOS, Apple's productivity suite, the hundreds of apps we use on our phones, and, last but not least, the AAA 3D video games. I just ran *The Witcher 3* some hours ago. I cannot fathom how hundreds of people came together to put out a masterpiece of art, entertainment and music, all for less than $30 (which is how much the GOTY version is during sales).\n\nI suppose no one thinks about it much, but the things we have achieved in the past several decades, with semiconductor, electrical, electronic, computer and software engineering (to give the entire hardware stack) is, to reuse the title, simply magical and incredible. This post, for instance, was typed probably thousands of kilometres from any one of you reading it. And yet you *can* read it, within seconds of me hitting that 'Post' button. I can download a terabyte's worth of data in two hours flat, and were my network not the bottleneck, write all that data to a flash drive in a quarter the time. I have a slab of silicon in my computer that can render *trillions* of vertices a second, and render games that look impossibly life-like, at sixty to eighty frames a second. We fly on jet airliners that, once the VNAV and LNAV buttons are pressed, can effectively fly themselves to their destinations with minimal pilot intervention or oversight (passing over the 737 MAX). \n\nI'm not particularly great at problem-solving, and even when it comes to assignments, I struggle plenty, and it really is quite un-imaginable that many of these software implementations have sometimes been one-man initiatives. I have (and still do) had trouble implementing a simple linked list, or a bog-standard 3D graphics assignment. I cannot comprehend the level of understanding needed to implement so many of the complex things we take for granted today. Who on earth could have thought that we could type a button, it sends an electrical signal to a slab of silicon with impurities, and a nanosecond later, what was a white text box now has the letter on that button there? The complete hardware-kernel-driver-OS-application stack is mind-boggling, and the fact that Linux, an OS that today powers nearly every supercomputer, was written in someone's spare time, simply fails my comprehension. \n\nThe things that everyone here does is amazing. FOSS or not, you help billions of people worldwide save effort and time. The software and hardware you develop feed, clothe, ventilate, move, cure, and entertain people. Thank you.\n\n___\n\n**TL;DR:** title.",
          "author_fullname": "t2_13gg8y",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "What you developers and software engineers do is little less than magic. Thank you.",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/linux",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_drxxjt",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": "transparent",
          "subreddit_type": "public",
          "ups": 1295,
          "total_awards_received": 1,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": "a54a7460-cdf6-11e8-b31c-0e89679a2148",
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 1295,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": 1572963838.0,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [
            {
              "a": ":arch:",
              "e": "emoji",
              "u": "https://emoji.redditmedia.com/tip79drnqpr11_t5_2qh1a/arch"
            }
          ],
          "gildings": {
            "gid_3": 1
          },
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1572982474.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "richtext",
          "domain": "self.linux",
          "allow_live_comments": true,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi everyone!&lt;/p&gt;\n\n&lt;p&gt;Before I begin, disclaimer: I&amp;#39;ve been meaning to find an appropriate place to post this, but I couldn&amp;#39;t really think of one; I hope this stays up. &lt;/p&gt;\n\n&lt;p&gt;I am a second-year computer science and physics undergraduate. Before I matriculated, I thought I was a tech pro when I could fix a broken Windows bootloader, configure an off-the-shelf router using its &lt;em&gt;GUI&lt;/em&gt;, and slide some sliders on photos in Lightroom. Joining university was a simultaneously humbling and enlightening experience, when I realised my peers were writing hundreds, perhaps even thousands of lines of code per day; one person is a regular contributor to the Linux Kernel. Another group of people developed &lt;a href=\"https://nusmods.com\"&gt;this website&lt;/a&gt;, to make my fellow students&amp;#39; lives easier when choosing our modules for the semester. Plenty others are &lt;em&gt;incredibly&lt;/em&gt; talented and versatile; I felt (and still do feel) like a tiny fish in the Pacific. &lt;/p&gt;\n\n&lt;p&gt;Despite that, beginning my CS career has also exposed me to dozens of FOSS initiatives and projects that I would have otherwise passed over, had I chosen another major: things like Arch Linux (I have it installed, but it is broken by my own volition and I have to find some time to reinstall it), Vim and Emacs (with respect to Vim: I know how to change modes, edit and quit, but that&amp;#39;s it), LaTeX, KDE, the entire GNU initiative, Blender, Git (which I still don&amp;#39;t know how to use), and so on, in no particular order. This list could get so long that it&amp;#39;d exhaust this post&amp;#39;s character count.&lt;/p&gt;\n\n&lt;p&gt;All high-quality, professional, powerful software that gets things done, with nary a penny or cent needed to purchase these, and the complete source available to all.&lt;/p&gt;\n\n&lt;p&gt;That being said, even closed-source software is equally wondrous. I understand this is the Linux subreddit, but this is a general thank-you post to &lt;em&gt;everyone&lt;/em&gt;, so things like MS Office 365, Adobe&amp;#39;s suite (though slow and bloated), Windows, OS X, iOS, Apple&amp;#39;s productivity suite, the hundreds of apps we use on our phones, and, last but not least, the AAA 3D video games. I just ran &lt;em&gt;The Witcher 3&lt;/em&gt; some hours ago. I cannot fathom how hundreds of people came together to put out a masterpiece of art, entertainment and music, all for less than $30 (which is how much the GOTY version is during sales).&lt;/p&gt;\n\n&lt;p&gt;I suppose no one thinks about it much, but the things we have achieved in the past several decades, with semiconductor, electrical, electronic, computer and software engineering (to give the entire hardware stack) is, to reuse the title, simply magical and incredible. This post, for instance, was typed probably thousands of kilometres from any one of you reading it. And yet you &lt;em&gt;can&lt;/em&gt; read it, within seconds of me hitting that &amp;#39;Post&amp;#39; button. I can download a terabyte&amp;#39;s worth of data in two hours flat, and were my network not the bottleneck, write all that data to a flash drive in a quarter the time. I have a slab of silicon in my computer that can render &lt;em&gt;trillions&lt;/em&gt; of vertices a second, and render games that look impossibly life-like, at sixty to eighty frames a second. We fly on jet airliners that, once the VNAV and LNAV buttons are pressed, can effectively fly themselves to their destinations with minimal pilot intervention or oversight (passing over the 737 MAX). &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not particularly great at problem-solving, and even when it comes to assignments, I struggle plenty, and it really is quite un-imaginable that many of these software implementations have sometimes been one-man initiatives. I have (and still do) had trouble implementing a simple linked list, or a bog-standard 3D graphics assignment. I cannot comprehend the level of understanding needed to implement so many of the complex things we take for granted today. Who on earth could have thought that we could type a button, it sends an electrical signal to a slab of silicon with impurities, and a nanosecond later, what was a white text box now has the letter on that button there? The complete hardware-kernel-driver-OS-application stack is mind-boggling, and the fact that Linux, an OS that today powers nearly every supercomputer, was written in someone&amp;#39;s spare time, simply fails my comprehension. &lt;/p&gt;\n\n&lt;p&gt;The things that everyone here does is amazing. FOSS or not, you help billions of people worldwide save effort and time. The software and hardware you develop feed, clothe, ventilate, move, cure, and entertain people. Thank you.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; title.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [
            {
              "count": 1,
              "is_enabled": true,
              "subreddit_id": null,
              "description": "Gives the author a month of Reddit Premium, which includes %{coin_symbol}700 Coins for that month, and shows a Platinum Award.",
              "end_date": null,
              "award_sub_type": "GLOBAL",
              "coin_reward": 0,
              "icon_url": "https://www.redditstatic.com/gold/awards/icon/platinum_512.png",
              "days_of_premium": 31,
              "is_new": false,
              "id": "gid_3",
              "icon_height": 512,
              "resized_icons": [
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/platinum_16.png",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/platinum_32.png",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/platinum_48.png",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/platinum_64.png",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://www.redditstatic.com/gold/awards/icon/platinum_128.png",
                  "width": 128,
                  "height": 128
                }
              ],
              "days_of_drip_extension": 31,
              "award_type": "global",
              "start_date": null,
              "coin_price": 1800,
              "icon_width": 512,
              "subreddit_coin_reward": 0,
              "name": "Platinum"
            }
          ],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": ":arch:",
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh1a",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "drxxjt",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "delta_p_delta_x",
          "discussion_type": null,
          "num_comments": 181,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": "dark",
          "permalink": "/r/linux/comments/drxxjt/what_you_developers_and_software_engineers_do_is/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/linux/comments/drxxjt/what_you_developers_and_software_engineers_do_is/",
          "subreddit_subscribers": 452812,
          "created_utc": 1572953674.0,
          "num_crossposts": 1,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "rust",
          "selftext": "Hi all,\n\nAs some of you will be aware, I've spent the last 3 1/2 years writing a [book that teaches Rust and systems programming](https://www.manning.com/books/rust-in-action?a_aid=rust&amp;a_bid=0367c58f&amp;chan=reddit). I'm finally reaching the end of the manuscript and starting to think more about promotion.\n\nI'm really keen to promote my work as widely as possible. Not so much from the money side of things--I only make about $2/sale--but because I really want to bring systems programming to a wider audience.  \n\nWhere are the places that you went to learn that domain? Are there places that I should be posting it so that people can find it? I'm very wary of spamming communities.. but I suppose a link or two could be worthwhile?",
          "author_fullname": "t2_4majh",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Where did you look to learn about systems programming?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/rust",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_drsy1i",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": "",
          "subreddit_type": "public",
          "ups": 197,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 197,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": "contrib",
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "self",
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1572950849.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.rust",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all,&lt;/p&gt;\n\n&lt;p&gt;As some of you will be aware, I&amp;#39;ve spent the last 3 1/2 years writing a &lt;a href=\"https://www.manning.com/books/rust-in-action?a_aid=rust&amp;amp;a_bid=0367c58f&amp;amp;chan=reddit\"&gt;book that teaches Rust and systems programming&lt;/a&gt;. I&amp;#39;m finally reaching the end of the manuscript and starting to think more about promotion.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m really keen to promote my work as widely as possible. Not so much from the money side of things--I only make about $2/sale--but because I really want to bring systems programming to a wider audience.  &lt;/p&gt;\n\n&lt;p&gt;Where are the places that you went to learn that domain? Are there places that I should be posting it so that people can find it? I&amp;#39;m very wary of spamming communities.. but I suppose a link or two could be worthwhile?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/tLzTncm0Wrefo_FJvbNTQ3eHX4icUI6XWOtDpOubxcA.jpg?auto=webp&amp;s=81cc6e211c58c813465d7b9a7fce9302c9f5877d",
                  "width": 720,
                  "height": 903
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/tLzTncm0Wrefo_FJvbNTQ3eHX4icUI6XWOtDpOubxcA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d28f62013e1cb7e015bd0d9a952075f1addf7b32",
                    "width": 108,
                    "height": 135
                  },
                  {
                    "url": "https://external-preview.redd.it/tLzTncm0Wrefo_FJvbNTQ3eHX4icUI6XWOtDpOubxcA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a08410d6ac537ebc2b3d64f10b10117147f86b51",
                    "width": 216,
                    "height": 270
                  },
                  {
                    "url": "https://external-preview.redd.it/tLzTncm0Wrefo_FJvbNTQ3eHX4icUI6XWOtDpOubxcA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3272d065912aa48f3ee1774901365e0e2c697617",
                    "width": 320,
                    "height": 401
                  },
                  {
                    "url": "https://external-preview.redd.it/tLzTncm0Wrefo_FJvbNTQ3eHX4icUI6XWOtDpOubxcA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=61de82ab60649b34a5506163ee3e50e3b897f370",
                    "width": 640,
                    "height": 802
                  }
                ],
                "variants": {},
                "id": "n7Wzzhx1zrDfuucnVQt-gMNxdl0kc2vrENyucCrBMV4"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": "rust in action",
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2s7lj",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "drsy1i",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "timClicks",
          "discussion_type": null,
          "num_comments": 76,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": "dark",
          "permalink": "/r/rust/comments/drsy1i/where_did_you_look_to_learn_about_systems/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/rust/comments/drsy1i/where_did_you_look_to_learn_about_systems/",
          "subreddit_subscribers": 83126,
          "created_utc": 1572922049.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "learnrust",
          "selftext": "From reading **The Rust Programming Language** book, I understand that there are two places variables can be stored:\n\n* Stack, or\n* Heap.\n\nAlso, I understand `String` is stored in the heap but where is `str` (string literal) stored?\n\nLooking up online I got different answers: \n\n1. Stored in the stack:\n&gt; However, things get more interesting when we start passing around values and switching from using a string literal, which is stored on the stack, to using a String type, which is stored on the heap (reference: https://medium.com/@thomascountz/ownership-in-rust-part-1-112036b1126b).\n\n2. Stored in the *program binary*:\n&gt; String literals are not stored in the heap or the stack, they are stored directly in your program\u2019s binary. Literally embedded in the binary, and the reference is a reference to the location in the binary (reference: https://users.rust-lang.org/t/str-string-literals/29635).\n\nIf the second answer is correct, could anyone clarify what is the *program binary*?\n\nThanks in advance!",
          "author_fullname": "t2_15ys00",
          "saved": true,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Where are string literals stored?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/learnrust",
          "hidden": false,
          "pwls": null,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "hide_score": false,
          "name": "t3_drmx2b",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 6,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 6,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "steward_reports": [],
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "self",
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1572925443.0,
          "link_flair_type": "text",
          "wls": null,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.learnrust",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;From reading &lt;strong&gt;The Rust Programming Language&lt;/strong&gt; book, I understand that there are two places variables can be stored:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Stack, or&lt;/li&gt;\n&lt;li&gt;Heap.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Also, I understand &lt;code&gt;String&lt;/code&gt; is stored in the heap but where is &lt;code&gt;str&lt;/code&gt; (string literal) stored?&lt;/p&gt;\n\n&lt;p&gt;Looking up online I got different answers: &lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Stored in the stack:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;However, things get more interesting when we start passing around values and switching from using a string literal, which is stored on the stack, to using a String type, which is stored on the heap (reference: &lt;a href=\"https://medium.com/@thomascountz/ownership-in-rust-part-1-112036b1126b\"&gt;https://medium.com/@thomascountz/ownership-in-rust-part-1-112036b1126b&lt;/a&gt;).&lt;/p&gt;\n&lt;/blockquote&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Stored in the &lt;em&gt;program binary&lt;/em&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;String literals are not stored in the heap or the stack, they are stored directly in your program\u2019s binary. Literally embedded in the binary, and the reference is a reference to the location in the binary (reference: &lt;a href=\"https://users.rust-lang.org/t/str-string-literals/29635\"&gt;https://users.rust-lang.org/t/str-string-literals/29635&lt;/a&gt;).&lt;/p&gt;\n&lt;/blockquote&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;If the second answer is correct, could anyone clarify what is the &lt;em&gt;program binary&lt;/em&gt;?&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/eu9Sb9yO1am6nL78SLrFqhCWFI6Mvn2CKzVG8hZkR8A.jpg?auto=webp&amp;s=fdf22582150bb585a5c91fc52b4c7d5879c53e59",
                  "width": 992,
                  "height": 1058
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/eu9Sb9yO1am6nL78SLrFqhCWFI6Mvn2CKzVG8hZkR8A.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=9991ab4a037ff9e756fdd04d98590bf9e2e9a3e5",
                    "width": 108,
                    "height": 115
                  },
                  {
                    "url": "https://external-preview.redd.it/eu9Sb9yO1am6nL78SLrFqhCWFI6Mvn2CKzVG8hZkR8A.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e7e4ce45aa7b01ec9edeaf3300c19bb5ee16439b",
                    "width": 216,
                    "height": 230
                  },
                  {
                    "url": "https://external-preview.redd.it/eu9Sb9yO1am6nL78SLrFqhCWFI6Mvn2CKzVG8hZkR8A.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f0a2333564dad353fb8fed04576688700654160b",
                    "width": 320,
                    "height": 341
                  },
                  {
                    "url": "https://external-preview.redd.it/eu9Sb9yO1am6nL78SLrFqhCWFI6Mvn2CKzVG8hZkR8A.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=23a28107bc4aafd3f1f276fa2c819022e4c75d70",
                    "width": 640,
                    "height": 682
                  },
                  {
                    "url": "https://external-preview.redd.it/eu9Sb9yO1am6nL78SLrFqhCWFI6Mvn2CKzVG8hZkR8A.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=138eebd515961e0a4e736309f588eede64f1d645",
                    "width": 960,
                    "height": 1023
                  }
                ],
                "variants": {},
                "id": "FPJuI9U63jOtLbZntmV3FiszdSNMKSCIpI40OiZgxS8"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_3amtr",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "drmx2b",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "chiarl",
          "discussion_type": null,
          "num_comments": 7,
          "send_replies": true,
          "whitelist_status": null,
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/learnrust/comments/drmx2b/where_are_string_literals_stored/",
          "parent_whitelist_status": null,
          "stickied": false,
          "url": "https://www.reddit.com/r/learnrust/comments/drmx2b/where_are_string_literals_stored/",
          "subreddit_subscribers": 2044,
          "created_utc": 1572896643.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      }
    ],
    "after": "t3_drmx2b",
    "before": null
  }
}
